{{!-- Sidebar will stay in the main outlet, everything
  else will stay in sidebar's outlet --}}

<div id="sidebar-toggle" {{action "openSidebar"}}>
  <i class="fa fa-arrow-circle-right"></i>
</div>


{{! @TODO: create a "tutorial" component containing all #legend markup
    in this template, show "tutorial" by default. hide tutorial if user clicks "close" button
    also, no other interaction with network, sidebar or network options should be allowed if tutorial is displayed.
}}
<section id="legend">

  <div class="loading-bar">
    {{progress-bar percent=stabilizationPercent message="Please wait, the network is being loaded..."}}
  </div>

  <div class="launch-network launch-network{{stabilizationPercent}}">
    Your Network is loaded!
    <a class="btn-tiny transparent primary" {{action "toggleInfo" on="click"}}>
      Launch {{fa-icon "arrow-circle-right"}}
    </a>
  </div>

  <div class="carousel">
    {{#carousel-container transitionInterval=400 as |ui controls|}}
      <div class="carousel-body">
        {{#ui.item}}
          <div class="carousel-content">
            <img src="images/carousel/1company.jpg">
          </div>
        {{/ui.item}}
        {{#ui.item}}
          <div class="carousel-content">
            <img src="images/carousel/2govermnt.jpg">
          </div>
        {{/ui.item}}
        {{#ui.item}}
          <div class="carousel-content">
            <img src="images/carousel/3relationship.jpg">
          </div>
        {{/ui.item}}
        {{#ui.item}}
          <div class="carousel-content">
            <img src="images/carousel/4merging.jpg">
          </div>
        {{/ui.item}}
        {{#ui.item}}
          <div class="carousel-content">
            <img src="images/carousel/5tenders.jpg">
          </div>
        {{/ui.item}}

      </div>

      <div class="carousel-controls">

        <small class="carousel-control carousel-right" onclick={{controls.next}}>
          {{fa-icon "arrow-circle-left"}} Previous
        </small>
        <small class="carousel-control carousel-left" onclick={{controls.previous}}>
          {{fa-icon "arrow-circle-right"}} Next
        </small>

        <div class="carousel-close">
          <a class="btn-tiny transparent" {{action "toggleInfo" on="click"}}>
            Close
          </a>
        </div>
      </div>

    {{/carousel-container}}
  </div>
</section>

<div id="network-container" style="height: {{height}}px;" class="stabilization{{stabilizationPercent}}">

  {{outlet}}

  {{! @TODO: this should be a part of network-embedding component }}
  <div class="crop-fake">
    <div class="go-back-crop" {{action "toggleCrop" on="click"}}>
      {{fa-icon 'crop' size=1}}
    </div>
  </div>


  {{#if model}}

    {{! @TODO: properly describe how this works and what is it for }}
    {{#if network.selectedNodes}}
      {{#if network.selectedNodes.length}}
        {{#each network.selectedNodes as |node|}}
          {{box-details
              graphElementType='node'
              graphElementId=node
              networkModel=model
              id="box-details-container"
              network=network
              networkService=networkService
          }}
        {{/each}}
      {{/if}}
    {{else}}
      {{#if network.selectedEdges}}
        {{#if network.selectedEdges.length}}
          {{#each network.selectedEdges as |edge|}}
            {{box-details
                graphElementType='edge'
                graphElementId=edge
                networkModel=model
                id="box-details-container"
                network=network
                networkService=networkService
            }}
          {{/each}}
        {{/if}}
      {{/if}}
    {{/if}}


    {{! @TODO: create a "network-controls" component containing all #network-controls markup }}
    <div id="network-controls">
      <a class="vis-button" {{action "modalNetworkLink" on="click"}}>
        {{fa-icon 'link' size=1}}
        <div class="tooltip"> Get link </div>
      </a>
      <a class="vis-button" {{action "stopPhysics" on="click"}}>
        {{fa-icon 'cogs'}}
        <div class="tooltip"> Stop movement </div>
      </a>

      <a class="vis-button {{unless session.isAuthenticated "disabled-vis-button"}}" {{action "showClustering" on="click"}}>
        {{fa-icon 'database' size=1}}
        <div class="tooltip"> Merge nodes </div>
      </a>
      <a class="vis-button" {{action "toggleCrop" on="click"}}>
        {{fa-icon 'crop' size=1}}
        <div class="tooltip"> Export image </div>
      </a>

      <a class="vis-button" {{action "toggleInfo" on="click"}}>
        {{fa-icon 'paw' size=1}}
      </a>
    </div>

    {{#if networkLinkModal}}
    {{! @TODO: create a "network-link-modal" component markup }}
    <div id="modalNetworkLink" >
      <div class="modal-container">
        <span {{action "modalNetworkLink" on="click"}}>
          {{fa-icon 'close' size=1 class="close"}}
        </span>
        <div class="modal-content">
          <div class="input-field col s6">
            <input value="{{networkLink}}" id="network-link"
                   type="text" autofocus onFocus="this.select()" onclick="this.select()" onblur="this.focus()">
          </div>
        </div>
      </div>
    </div>
    {{/if}}

    {{!
      Clustering modal. Lets user merge nodes of same type
    }}
    {{#if networkClusteringModal}}
      {{network-clustering
          action="closeClustering"
          class="clustering"
          networkService = networkService
          notifications = notifications
          networkId = model.id
          me=me
          ajax=ajax
      }}
    {{/if}}

    {{!
      Embedding modal. Lets user to take a snapshot of the current screen
      @TODO: close the sidebar and legend, when embedding modal is shown.
     }}
    {{#if networkEmbeddingModal}}
      {{network-embedding
          canvas = visCanvas
          action="closeEmbedding"
          class="embeding"
          networkService = networkService
          notifications = notifications
          networkId = model.id
      }}
    {{/if}}

    {{!
      Network canvas
    }}
    {{#visjs-network
      options=networkOptions
      nodesSet=networkService.nodes
      edgesSet=networkService.flaggedEdges
      startStabilizingAction=(action 'startStabilizing')
      stabilizationIterationsDoneAction=(action 'stabilizationIterationsDone')
      stabilizedAction=(action 'stabilized')
      stabilizationProgressAction=(action 'stabilizationProgress')
      storeAs=network
      selectedNodes=selectedNodes
      selectedEdges=selectedEdges
    }}
    {{/visjs-network}}

  {{/if}}

</div>

{{! @TODO: this markup should be a part of network-embedding component }}
<div class="crop-controls">
  <div class="modal-container">
    <div class="modal-content">
      blows my mind...!
      <div class="row">
        <span {{action "closeCrop" on="click"}}>
          {{fa-icon 'close' size=1 class="close"}}
        </span>
      </div>
      <div class="row">
        <div class="col s4">
          <small>width</small>
          <div class="small" style="margin-top: 0px !important;">
            {{input type="text" value=cropWidth id="canvasWidth"}}
          </div>
        </div>
        <div class="col s4">
          <small>height</small>
          <div class="small" style="margin-top: 0px !important;">
            {{input type="text" value=cropHeight id="canvasHeight"}}
          </div>
        </div>
        <div class="col s4">
          <a id="downloadLnk" class="btn-small primary" download="YourFileName.png"  >
            Save image
          </a>
        </div>
      </div>
    </div>
  </div>
</div>
