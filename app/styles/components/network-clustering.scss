// modal backdrop
.ember-view.clustering{
  background: fade-out(#000,0.3);
  width: 100%;
  height: 100vh;
  position: absolute;
  right: 0px;
  top: 0;
  z-index: $zindex-modal;

  @media (max-width: $medium-screen) {
    top: -$navbar-height;
  }
}
#modalClustering {
  position: absolute;
  top: 10%;
  width: 100%;
  z-index: 9;

  .modal-container {
    @include box;
    box-shadow: $modal-box-shadow;
    width: 700px;
    max-width: 90%;
    margin: 0 auto;

    .close {
      position: absolute;
      top: $gutter-width;
      right: $gutter-width;
    }
  }

  .nodes, .clusters {
    height: 350px;
    overflow: hidden;
    position: relative;
    z-index: 4;

    // slidght gradient at the bottom of each list
    &:after {
      content: ' ';
      z-index: 5;
      display: block;
      position: absolute;
      bottom: 0;
      width: 100%;
      height: 30px;
      background: linear-gradient(to bottom, rgba(26,26,28,0) 0%,rgba(26,26,28,1) 100%);
    }
    .cluster-list-inner,
    .cluster-node.list {
      &:last-child { margin-bottom: 20px; } //so the gradient doesnt overlap with last item
    }


    .nodes-lists,
    .cluster-list {
      max-height: 245px;
    }
    .cluster-list-container,
    .cluster-list-wrapper,
    .nodes-lists {
      height: 245px;
    }
  }
  .col-label {
    color: $text-dark-color;
    position: relative;
  }

  .cluster-node {
    border: 1px solid $box-border-color;
    background: rgba(255,255,255,0.05);
    border-radius: 3px;
    padding: 0 6px;
    line-height: 1.6em;
    margin: 5px 0;
    display: block;
    position: relative;

    // truncate if the text is too long
    width: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;

    &:hover {
      border-color: lighten($box-border-color,10%);
      .node-label { color: $text-color; }
    }

    > .node-label {
      color: $text-muted-color;
    }

    > .node-type {
      font-size: .5em;
      line-height: 1em;
      position: relative;
      top: -.1em;
      margin-right: .2em;
      &.bidder { @extend .figure-bidder; }
      &.buyer { @extend .figure-buyer; }
    }

  }

  .nodes {
    padding-right: $gutter-width;
    .cluster-node {
      cursor: move;
      width: 100%;
      overflow: hidden;
    }
  }

  .clusters {
    padding-left: $gutter-width;
    border-left: 1px solid rgba(255,255,255,0.1);

    // reverse the order so the "drag here" is always on the top
    .cluster-list-inner {
      display: flex;
      flex-direction: column-reverse;
    }

    @keyframes newCluster {
       from { visibility: 0; max-height: 0; }
       to { visibility: 1; max-height: 999em;  }
     }
    .cluster {
      overflow: hidden;
      border-radius: 4px;
      background: rgba(0,0,0,0.3);
      position: relative;
      border: 1px solid rgba(255,255,255,0.15);
      margin-bottom: 5px;
      transition: all .3s ease;

      //empty cluster
      &.isempty-true {
        background: rgba(0,0,0,0.1);
        border: 1px dashed rgba(255,255,255,0.15);
        padding: .7em;
        text-align: center;

        // empty cluster with drag here label
        .cluster-drag-here {
          text-align: center;
          letter-spacing: .05em;
          color: $text-muted-color;
          display: inline;
        }

      }

      &.isempty-false {
        max-height: 999em;
      }

      // cluster style when node is being dragged over it
      &.accepts-drag {
        border: 1px dashed rgba(255,255,255,0.55);
      }

      .clustered-nodes {
        animation: newCluster 5s ease;
        padding: .5*$padding-small $padding-small;
        transition: max-height .3s ease;
        max-height: 999em;
      }
      .cluster-node {
        padding-right: 20px;
        cursor: default;


        > .removeNode {
          position: absolute;
          right: .5em;

          color: $text-muted-color;
          &:hover {
            cursor: pointer;
            color: $text-color;
          }
        }
      }

      // header with editable cluster name
      .edit-cluster-input {
        position: relative;
        padding: .5*$padding-small $padding-small 0;
        margin-bottom: -.25em;

        .cluster-type {
          position: absolute;
          left: 1.5em;
          top: 1em;
          font-size: .78em;
          z-index: 2;
          &.bidder { color: $color-bidder; }
          &.buyer { color: $color-buyer; }
        }



        .cluster-text-input,
        .cluster-name-editable {
          z-index: 1;
          font-size: .9rem;
          padding: .2em 1em .2em 1.5em;
          line-height: 1.6em;
          height: auto;
          padding-right: 4em;
          box-sizing: border-box;
          display: inline-block;
          position: relative;
          margin-bottom: 0;
          //background: rgba(0,0,0,0.9);
          border: 1px dashed rgba(255,255,255,0);
          box-shadow: none;
          color: $text-muted-color;
          &:focus {
            border-color: rgba(255,255,255,0.3);
            outline: none;
            color: $text-color;
          }
        }

        .edit-cluster-controls {
          z-index: 2;
          position: absolute;
          right: 15px;
          top: .5em;
          > * {
            padding: .2em;
          }
          .edit-yes {
            > .save-edit { display: block; }
            > .edit { display: none; }
          }
          .edit-no {
            > .save-edit { display: none; }
            > .edit { display: block; }
          }
        }


        .cluster-text-input:hover + .edit-cluster-controls .edit-cluster-name {
          visibility: visible;
        }

        .cluster-delete:hover {
          color: $error-color;
        }

      }

    }
  }


  .nodes-filter-buttons {
    text-align: center;
    font-size: .5em;
    span {
      margin: 0 2px;
      cursor: pointer;
    }
  }
}
